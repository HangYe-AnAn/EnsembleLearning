% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simpleEnsembleGroup7.R
\name{simpleEnsembleGroup7}
\alias{simpleEnsembleGroup7}
\title{AMS 597 Final Project - Simple Ensemble Group 7}
\usage{
simpleEnsembleGroup7(
  X,
  y,
  method = NULL,
  K = NULL,
  bagging = FALSE,
  ensemble = FALSE,
  alpha = 0.5,
  n_bag = 100
)
}
\arguments{
\item{X}{A predictor matrix, which may contain categorical, continuous, or discrete data.}

\item{y}{The response variable vector, which can be either binary or continuous.}

\item{method}{A character string specifying the type of model to fit.
Valid options are "linear", "ridge", "lasso", "elastic", and "svm".
\cr
This parameter must be a single model type when bagging is TRUE. Ex. method = "linear"
\cr
This parameter can be multiple model types when ensemble is TRUE. A list of character strings specifying the model types to be included in ensemble learning. Ex. method = c("linear", "lasso")}

\item{K}{An optional positive integer specifying the number of top predictors to use.
If NULL, all predictors in X are used to train the model specified.
Default is FALSE.}

\item{bagging}{A logical value indicating whether bagging should be used.
Bagging is only applicable to a single model type at a time. Ex. method = "linear"
If bagging is TRUE, ensemble must be FALSE.
Default is FALSE.}

\item{ensemble}{A logical value indicating whether ensemble should be used.
Ensemble is applicable to multiple model types at a time. Ex. method = c("linear", "lasso")
If ensemble is TRUE, bagging must be FALSE.
Default is FALSE.}

\item{alpha}{The alpha parameter(from 0 to 1 inclusive) for elastic net models, influencing the mix of ridge and lasso regularization. Default is 0.5.}

\item{n_bag}{The number of bagging iterations to perform. Default is 100.}
}
\value{
Depending on the settings, it returns a fitted model or models,
        potentially along with model performance metrics if specified.
}
\description{
The function simpleEnsembleGroup7 implements various regression models and it is able to apply different tasks, including bagging, pre-screen for top informative predictors, and ensemble learning.
}
\details{
Here we will brifly introduce the basic \bold{workflow} of out simEnsemnbleGroup7 function: \cr \cr
1.  Check and handle missing values(For more information see \code{\link[simpleEnsembleGroup7]{handle_missing_values}}) and, if response is binary and not numeric, it converts categorical variables of the response (y) to numeric binary(0 or 1).
\cr
\cr
 2. It then checks the validity of the parameters, including the number of top predictors (K) (For more information see \code{\link[simpleEnsembleGroup7]{check_topK}}), if the selected models are allowed (we only allow "linear", "ridge", "lasso", "elastic", and "svm"), number of bag samples (n_bag), alpha values (applies only if you are using elastic net method), and whether ensemble or bagging is TRUE or FALSE.
If the parameters is correctly entered, the function will proceeds to the next stage of the modeling process.
\cr
\cr
\enumerate{ 3. Based on these checks, the function fits a model using the specified method, either with or without bagging or ensemble learning and if pre-screening for top informative predictors is applied.
\item If bagging is TRUE, function will compute bagging and return the appropriate model fitting function based on the method chosen. (For more information see \code{\link[simpleEnsembleGroup7]{bagging_linear_model}}, \code{\link[simpleEnsembleGroup7]{bagging_ridge_model}}, \code{\link[simpleEnsembleGroup7]{bagging_lasso_model}}, \code{\link[simpleEnsembleGroup7]{bagging_elastic_model}})
\enumerate{
\item If bagging = FALSE, ensemble = FALSE, K = NULL, function will return the basic fitting model based on the single method that the user specify.
\item If bagging = TRUE, ensemble = FALSE, K = NULL, function will apply bagging method and will return the final model that averages the total bagged models based on the single method that the user specify.
\item If bagging = TRUE, ensemble = FALSE, K = 5, function will apply bagging method and will find the top 5 informative predictors for each bag sample, and will return the final model that averages the total bagged models based on the single method that the user specify.
}


\item Bagging and ensemble cannot be both TRUE.
\item If ensemble is TRUE, function will compute ensemble and return the appropriate model. (For more information see \code{\link[simpleEnsembleGroup7]{EnsembleLearning}}).
}

If the number of predictors(p) is larger compared to the number of observations(n), a warning is issued for linear regression and function will stop.
\cr
\cr
4. Finally, the function returns the fitted model based on the selected options.
}
\examples{
# Load required libraries
library(glmnet)
# Generate sample data
n <- 500  # Number of observations
n_predictors <- 50  # Number of predictors
# Create predictor variables
predictors <- matrix(rnorm(n * n_predictors), ncol = n_predictors)

# Create names for the predictors
predictor_names <- paste0("Predictor", 1:50)
# Assign names to the columns of the predictors matrix
colnames(predictors) <- predictor_names

# Generate response variable
response <- rnorm(n)
#bagging with no top K and elastic method
simpleEnsembleGroup7(predictors, response, method = "elastic", bagging = T)

# example code

# Load required libraries
library(glmnet)
# Generate sample data
n <- 100  # Number of observations
n_predictors <- 105  # Number of predictors
# Create predictor variables
predictors <- matrix(rnorm(n * n_predictors), ncol = n_predictors)

# Create names for the predictors
predictor_names <- paste0("Predictor", 1:105)
# Assign names to the columns of the predictors matrix
colnames(predictors) <- predictor_names

# Generate response variable
response <- rnorm(n)
#bagging with top K and elastic method
simpleEnsembleGroup7(predictors, response, method = "elastic", bagging = T, K = 3)
#' @examples
# example code

# Load required libraries
library(glmnet)
# Generate sample data
n <- 100  # Number of observations
n_predictors <- 105  # Number of predictors
# Create predictor variables
predictors <- matrix(rnorm(n * n_predictors), ncol = n_predictors)

# Create names for the predictors
predictor_names <- paste0("Predictor", 1:105)
# Assign names to the columns of the predictors matrix
colnames(predictors) <- predictor_names

# Generate response variable
response <- rnorm(n)
#ensemble with elastic and lasso
simpleEnsembleGroup7(predictors, response, method = c("elastic", "lasso"), bagging = F, ensemble = T, K = 3)

}
\author{
Hang Ye, Minghao Zhang, Lily Yuan, Jiang Yi
}
